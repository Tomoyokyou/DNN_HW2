
{
%\label{subsec:aRSC}

%In section \ref{subsec:RSC}, we demonstrated that RSC is capable of masking out the corrupted pixels and producing a clean image for further recognition tasks. However, the proportion of the unwanted pixels are predetermined by $\tau$, which controls the threshold that $w(e_{k})$ starts to drop rapidly. Since the occluded proportion in every patch varies tremendously, it doesn't make sense to fix $\tau$ at a single value for all patches.

%Here, we propose a new measure to determine the threshold by the slope of the error vector instead of $\tau$. This adaptive method is shown to capture the full range of occluded proportion precisely, and is able to produce satisfying mask for the occlude region.
%
%
	A deeper examination of RSC would reveal that the parameter $\tau$ can be interpreted as the proportion of images we want to reserve. For example, if we set $\tau$ to be 0.6, the worst 40\% of pixels in reconstruction would be marked and neglected while the cleanest 60\% of pixels would be reserved and used for further recognition purpose.

	In section \ref{subsec:RSC}, we demonstrated that RSC is capable of masking out the corrupted pixels and producing a clean image for further hallucination tasks. However, the proportion of the unwanted pixels are predetermined by $\tau$ ( which controls
the threshold that $w(e_{k})$ starts to drop rapidly). Since the occluded proportion in every images varies tremendously, it doesnâ€™t make sense to fix $\tau$ at a single value for all patches. Thus, the biggest problem of occlusion-robust face hallucination becomes how to adaptively determine the proportion of pixels we are going to drop for each input image.
To solve this problem, we take some assumptions into account.

% fig: idealCurve
\begin{figure}[!b]
\graphicspath{{fig/}}
        \begin{center}
            \includegraphics[scale=0.35]{idealCurve.jpg}
            \vspace{0cm}
            \caption{The ideal relationship between reconstruct error with $\tau$. (a) Input image (b) too many pixels are dropeed (c) ideal $\tau$ (d) the remaining image still contains occlusion\label{fig:idealCurve}}
        \end{center}
        
\end{figure}



\begin{enumerate}
\item The reconstruct error of the occluded region would be a lot greater than non-occluded region.
\item The reconstruct error in all occluded region would be at the same level while the reconstruct error in non-occluded region would be at another level which is lower than above. 
\end{enumerate}

%Following these assumptions, we can examine the relationship between reconstruction error and $\tau$. Ideally, the curve, which is illustrated in \ref{fig:idealCurve}, should consist of two straight line segments: the plain one contributed by pixels in the non-occluded region, and the steep one by the occluded region.
%However, as shown in \ref{fig:fitting}, we can see that the curve is more similar to an exponential curve rather than two straight lines. This difference may result from the intensity variation in the reconstruct region, which is later masked and set to a single value. Therefore, we choose to fit an exponential curve here not only for convenience and the reflection of real data, but also to neglect outlier points in the curve

 \begin{figure}[!t] 
        \begin{center}
            \graphicspath{{fig/}}
            \includegraphics[scale=0.35]{fitting.jpg}
            \vspace{0cm}
        \end{center}
    \caption{The exponential fitted curve on the experimental data.\label{fig:fitting}}
    
\end{figure}
	Therefore, if we adjust the parameter $\tau$ dynamically, when $\tau$ is too large(the reserved region still contains occlusions), the reconstruct error of the reserved region would be high, otherwise($\tau$ is too small and too many pixels including clean ones are dropped) the error would be low. Furthermore, although the reconstruct error would fall as $\tau$ decreases, there should be two trend in the relation curve between $\tau$ and the reconstruct error. By the second assumption, if $\tau$ falls into the range that the reserved region contains occlusions, the reconstruct error would fall linearly and sharply when we drop a few more pixels. On the contrary, if $\tau$ falls into the range that too many pixels have already been dropped, the reconstruct error would fall mildly when dropping more pixels. The curve we mention above is plotted in Fig. \ref{fig:idealCurve}.
	
	Consequently, by finding the intersection point of the two straight line shown above, we can determine the value of $\tau$. As we sample through the relation between $\tau$ and the reconstruct error, the curve does indicate the two trends of relation; however, it cannot be easily fit by two straight lines. To approximate our assumption, we use an exponential curve to fit the sampled points in practice. An exponential fit is chosen not only because it can reflect the two trends mentioned above better than other curves but also for the convenience that a smooth curve could neglect the effect of some outlier sample points. The approximated curve is shown in Fig. \ref{fig:fitting}.

	In order to find the target value of $\tau$ in the new exponential curve we approximate, we use a point of a fixed slope in the exponential curve to simulate the intersection point of the two lines in our assumption. Since we have no prior knowledge of the occlusion, we still need to divide some training images as validations to select this slope. Nonetheless, with the properly selected slope value, we could adaptively find $\tau$ for  input images without knowing the proportion of occluded region. 
	
\begin{figure}[!t]
\graphicspath{{fig/}}
    \begin{center}
        \includegraphics[scale=0.35]{cutSlope.jpg}
        \vspace{0cm}
        \caption{The appropriately selected slpe and the corresponding facial masks. Although these two images have different occluded proportion of pixels, this pre-defined slope can identify the occluded region precisely.}
        \label{fig:cutSlope}
    \end{center}
\end{figure}

% Nevertheless, this slope is a far more robust feature compared to $\tau$. (to replace the last sentence)
	At last, we get a mask of occluded region for every input image. We further assume that the occlusions are contiguous and use a median filter to remove idle pixels of the learned mask. Fig. \ref{fig:cutSlope} shows the effectiveness of using adaptive robust coding to find different value of $\tau$ and the learned masks for corresponding $\tau$.

} 